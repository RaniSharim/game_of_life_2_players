{"version":3,"file":"bundle.js","sources":["../../src/board.ts","../../src/game.ts","../../src/ui.ts","../../src/index.ts"],"sourcesContent":["export enum Cell {\n    Dead,\n    AlivePlayer0,\n    AlivePlayer1\n}\n\nexport const BOARD_SIZE = 10\n\nclass GetNeighborhoodResult {\n    constructor (public alive_player_1_count: number = 0, public alive_player_2_count: number = 0) {}\n    get total():number {return this.alive_player_1_count + this.alive_player_2_count }\n}\n\nexport class Board {\n    play_area:Cell[];\n    \n    constructor() {\n        this.reset_play_area();       \n    }    \n\n    reset_play_area() {\n        this.play_area = new Array<Cell>(BOARD_SIZE * BOARD_SIZE);\n        this.play_area.fill(Cell.Dead);       \n    }\n\n    get_cell_xy(row: number, col: number) {\n        return this.play_area[row * BOARD_SIZE + col]\n    }\n\n    set_cell(cell_number: number, new_state: Cell, allow_override: boolean = false) {\n\n        if (new_state == Cell.Dead && this.play_area[cell_number] == Cell.Dead) {\n            throw new Error(`Cannot kill a dead cell ${cell_number} = ${Math.floor(cell_number/BOARD_SIZE)} : ${cell_number%BOARD_SIZE}`);\n        }\n        else if ((new_state == Cell.AlivePlayer0 || new_state == Cell.AlivePlayer1)  && this.play_area[cell_number] != Cell.Dead && !allow_override) {\n            throw new Error(`Cannot spawn on occupied cell ${Math.floor(cell_number/BOARD_SIZE)} : ${cell_number%BOARD_SIZE}`)\n        }\n\n        this.play_area[cell_number] = new_state;\n    }\n\n    set_cell_xy(row: number, col:number, new_state: Cell) {\n        let cell_number = row * BOARD_SIZE + col;\n        this.set_cell(cell_number, new_state, false);\n    }\n\n    get_neighborhood(row:number, col:number): GetNeighborhoodResult {\n        let alive_player_1_count = 0\n        let alive_player_2_count = 0\n\n        for (let row_delta = -1; row_delta < 2; row_delta ++) {\n            let c_row = row + row_delta\n            if (c_row < 0 || c_row >= BOARD_SIZE) {\n                continue\n            }\n\n            for (let col_delta = -1; col_delta < 2; col_delta ++) {\n                if (row_delta == 0 && col_delta == 0) {\n                    continue\n                }                \n\n                let c_col = col + col_delta\n                if (c_col < 0 || c_col >= BOARD_SIZE) {\n                    continue\n                }\n\n                switch(this.play_area[c_row * BOARD_SIZE + c_col]) {\n                    case Cell.Dead: /* do nothing */ ; break;\n                    case Cell.AlivePlayer0: alive_player_1_count++; break;\n                    case Cell.AlivePlayer1: alive_player_2_count++; break;\n                }\n            }\n        }\n        \n        return new GetNeighborhoodResult(alive_player_1_count, alive_player_2_count);\n    }\n\n}","\nimport { BOARD_SIZE, Cell, Board } from './board'\n\nexport enum CellDelta {\n    NoChange,\n    Die,\n    SpawnPlayer0,\n    SpawnPlayer1\n}\n\nexport enum GameState {\n    InActive,\n    Place,\n    Run,\n    End\n}\n\ninterface SavedGameState {\n    board: Cell[];\n    score: number[];\n}\n\nexport class Game {\n    board: Board;\n    old_states: Array<SavedGameState>;\n\n    current_player = 0;\n    left_to_place = [0,0];\n    score = [0,0];\n\n    game_state: GameState = GameState.InActive;\n    \n    prev_player_placed: boolean = true;\n    current_player_placed: boolean = false;\n\n    constructor(board: Board) {\n        this.board = board;\n        this.init_game();\n    }\n\n    init_game() {\n        // Reset play area and history\n        this.board.reset_play_area();\n        this.old_states = [];\n        this.left_to_place = [20, 20];\n        this.score = [0,0];\n        // Choose startring player at random\n        this.current_player = Math.random() > 0.5 ? 0 : 1;\n        // Other player gets another placement\n        this.left_to_place[1 - this.current_player] += 1;\n\n        this.go_to_placement();\n    }\n\n    get_current_player() : number {\n        return this.current_player\n    }\n\n    get_placements_left() : Array<number> {\n        return this.left_to_place;\n    }\n\n    get_game_state() {\n        return this.game_state\n    }\n\n    game_step() {\n        let board_delta = this.get_board_delta();\n        let old_state = <Cell[]>Object.assign([], this.board.play_area);\n        let old_score = <number[]>Object.assign([], this.score);\n        this.old_states.push({board: old_state, score: old_score});\n\n        board_delta.forEach((new_state, idx) => {\n            switch (new_state) {\n                case CellDelta.NoChange: break;\n                case CellDelta.Die: this.board.set_cell(idx, Cell.Dead, false); break;\n                case CellDelta.SpawnPlayer0: this.board.set_cell(idx, Cell.AlivePlayer0, true); break;\n                case CellDelta.SpawnPlayer1: this.board.set_cell(idx, Cell.AlivePlayer1, true); break;\n            }\n        })\n\n        this.calculate_score();\n\n        console.log(`Comparing states`)\n\n        // If board is empty and one player can't place, end game\n        if ((this.left_to_place[0] == 0 && this.score[0] == 0) || (this.left_to_place[1] == 0 && this.score[1] == 0))\n        {\n            this.go_to_end_game();\n        }\n\n        // Pause game if board has only one color or is in a loop\n        if (this.score[0] == 0 || this.score[1] == 0 || this.check_for_repeating_game_state()) {\n            console.log(`Match found`)\n            this.go_to_placement();\n            if (this.left_to_place[0] > this.left_to_place[1]) {\n                this.current_player = 0\n            }\n            else if (this.left_to_place[1] > this.left_to_place[0]) {\n                this.current_player = 1\n            }\n            else {\n                this.current_player = 1 - this.current_player\n            }\n        }       \n\n        return board_delta;\n    }\n\n    compare_states(state1: SavedGameState, state2: SavedGameState) : boolean {\n        if (state1.score[0] != state2.score[0] || state1.score[1] != state2.score[1]) {\n            return false;\n        }\n        \n        for (let i = 0; i < BOARD_SIZE * BOARD_SIZE; i++) {\n            if (state1.board[i] != state2.board[i]) { \n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    check_for_repeating_game_state() {\n        const current_game_state = { board: this.board.play_area, score: this.score }\n        return this.old_states.some(old_state => this.compare_states(current_game_state, old_state))\n    }\n\n    get_cell_delta(row:number, col:number): CellDelta {\n        let neighborhood = this.board.get_neighborhood(row, col);\n        let current_cell_alive = this.board.get_cell_xy(row, col) != Cell.Dead\n\n        switch (neighborhood.total) {\n            case 2: return CellDelta.NoChange;\n            case 3: return current_cell_alive ? \n                        CellDelta.NoChange : \n                        neighborhood.alive_player_1_count > neighborhood.alive_player_2_count ?\n                        CellDelta.SpawnPlayer0 : CellDelta.SpawnPlayer1\n\n            default:  return current_cell_alive ? CellDelta.Die : CellDelta.NoChange;\n        }\n    }\n\n    get_board_delta() : CellDelta[] {\n        let play_area_delta = new Array<CellDelta>();\n        for (let c_row = 0; c_row < BOARD_SIZE; c_row++) {\n            for (let c_col = 0; c_col < BOARD_SIZE; c_col++) {\n                play_area_delta.push(this.get_cell_delta(c_row, c_col))            \n            }\n        }\n\n        return play_area_delta;\n    }\n\n    go_to_placement() {\n        console.log(`State = placement`);\n\n        if (this.left_to_place[0] == 0 && this.left_to_place[1] == 0) {\n            this.go_to_end_game();\n        }\n        else {\n            this.game_state = GameState.Place;\n            this.prev_player_placed = true;\n            this.current_player_placed = false;    \n        }\n    }\n\n    go_to_run() {\n        console.log(`State = run`);\n        this.game_state = GameState.Run;\n    }\n\n    go_to_end_game() {\n        console.log(`State = end`);\n        this.game_state = GameState.End;\n    }\n\n    can_place_at_xy(row:number, col:number): boolean {\n        return this.game_state == GameState.Place && this.board.get_cell_xy(row, col) == Cell.Dead && this.left_to_place[this.current_player] > 0;\n    }\n\n    place_at_xy(row:number, col:number) {        \n        this.left_to_place[this.current_player] -= 1;\n        this.current_player_placed = true;\n        this.board.set_cell_xy(row, col, this.current_player == 0 ? Cell.AlivePlayer0 : Cell.AlivePlayer1)\n    }\n    \n    pass_player() {\n        if (!this.current_player_placed && !this.prev_player_placed) {\n            this.go_to_run();\n        }\n\n        this.prev_player_placed = this.current_player_placed;\n        this.current_player = 1-this.current_player;\n        this.current_player_placed = false;\n\n        if (this.left_to_place[this.current_player] == 0) {\n            this.go_to_run();\n        }\n    }\n\n    calculate_score(): Array<number> {\n        let score = [0, 0];\n        for (let i = 0; i < BOARD_SIZE * BOARD_SIZE; i++) {\n            if (this.board.play_area[i] == Cell.AlivePlayer0) {\n                score[0]++\n            }\n            else if (this.board.play_area[i] == Cell.AlivePlayer1) {\n                score[1]++\n            }\n        }\n\n        this.score = score;\n\n        return score;\n    }\n}","import { BOARD_SIZE, Cell } from './board'\nimport { Game, GameState, CellDelta } from './game'\nexport class UI {\n\n    game: Game;\n    \n    constructor(game: Game) {\n        this.game = game\n    }\n\n    new_game() {\n        this.game.init_game();\n\n        this.set_current_player_title();\n        this.set_current_placements_left();\n        this.set_current_score();\n\n        this.create_board();\n        this.setup_buttons();\n    }\n\n    create_board() {\n        const board = document.getElementById(\"playboard\")\n        board.innerHTML = '';\n\n        for (let row = 0; row < BOARD_SIZE; row++) {\n            const dom_row = document.createElement(\"div\");\n            dom_row.style.display = \"flex\";\n            dom_row.style.flexDirection = \"row\";\n            for (let col = 0; col < BOARD_SIZE; col++) {\n                const dom_col = document.createElement(\"div\");\n                dom_col.className = \"board_cell\";\n                dom_col.id = `${row}-${col}`;\n                dom_col.onclick = () => this.cell_clicked(row, col)\n                dom_row.appendChild(dom_col)\n            }\n            board.appendChild(dom_row);\n        }\n    }\n\n    setup_buttons() {\n        const pass_btn = document.getElementById(\"pass_player_button\");\n        pass_btn.onclick = () => this.pass_player();\n        pass_btn.style.display = 'inline-block';\n        pass_btn.removeAttribute(\"disabled\");\n\n        const new_game_btn = document.getElementById(\"new_game_button\");\n        new_game_btn.onclick = () => this.new_game();\n        new_game_btn.style.display = 'none';\n\n        const win_div = document.getElementById(\"winner\");\n        win_div.innerHTML = '';\n        win_div.classList.remove('player_0');\n        win_div.classList.remove('player_1');\n        win_div.parentElement.style.display = \"none\";\n    }\n\n    cell_clicked(row: number, col: number) {\n        console.log(`Clicked ${row} : ${col}`);\n\n        if (this.game.can_place_at_xy(row, col)) {\n            this.game.place_at_xy(row, col);\n            const current_player = this.game.get_current_player();\n            this.change_color_at_xy(row, col, `active_player_${current_player}`);\n            this.set_current_placements_left();\n            this.set_current_score();\n        }\n    }\n\n    change_color_at_xy(row: number, col: number, css_class: string) {\n        const cell = document.getElementById(`${row}-${col}`);\n        cell.classList.remove(\"active_player_0\");\n        cell.classList.remove(\"active_player_1\");\n        \n        if (css_class) {\n            cell.classList.add(css_class);      \n        }\n    }\n\n    change_colors_many(diff: CellDelta[]) {\n        for (let row = 0; row < BOARD_SIZE; row++) {\n            for (let col = 0; col < BOARD_SIZE; col++) {\n                const delta = diff[row*BOARD_SIZE + col];\n                if (delta == CellDelta.NoChange) {\n                    continue;\n                }\n\n                this.change_color_at_xy(row, col, delta == CellDelta.Die ? null : delta == CellDelta.SpawnPlayer0 ? \"active_player_0\" : \"active_player_1\")\n            }\n        }\n    }\n\n    async pass_player() {\n        this.game.pass_player();\n        this.set_current_player_title();\n\n        if (this.game.get_game_state() == GameState.Run) {\n            document.getElementById(\"pass_player_button\").setAttribute(\"disabled\", \"disabled\");\n            this.run_game();\n        }\n    }\n\n    sleep(ms: number) {\n         return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    async run_game() {\n        while (this.game.get_game_state() == GameState.Run) {\n            console.log(`Running game loop`)\n            const board_delta = this.game.game_step();\n            this.change_colors_many(board_delta);\n            this.set_current_score();\n            await this.sleep(500)\n        }\n\n        console.log(`Ending game loop`)\n\n        if (this.game.get_game_state() == GameState.Place) {\n            document.getElementById(\"pass_player_button\").removeAttribute(\"disabled\");\n            this.set_current_player_title();\n        }\n        else if (this.game.get_game_state() == GameState.End) {\n            this.end_game();\n        }\n    }\n\n    end_game() {\n        document.getElementById(\"pass_player_button\").style.display = \"none\";\n        document.getElementById(\"new_game_button\").style.display = \"inline-block\";\n\n        const score = this.game.score;\n        const placements_left = this.game.get_placements_left()\n\n        const win_div = document.getElementById(\"winner\");\n        if (score[0] + placements_left[0] > score[1] + placements_left[1]) {\n            win_div.innerHTML = \"Red Wins!\";\n            win_div.classList.add(\"player_0\");\n        } \n        else if (score[1] + placements_left[1] > score[0] + placements_left[0]) {\n            win_div.innerHTML = \"Blue Wins!\";\n            win_div.classList.add(\"player_1\");\n        }\n        else {\n            win_div.innerHTML = \"Tie!\";\n        }\n        \n        win_div.parentElement.style.display = \"block\";\n    }\n\n    set_current_player_title() {\n        const current_player = this.game.get_current_player();\n        const current_player_title = document.getElementById(`current_player`);\n        current_player_title.innerHTML = current_player == 0 ? 'Red' : 'Blue'\n        current_player_title.classList.remove('player_0')\n        current_player_title.classList.remove('player_1')\n        current_player_title.classList.add(`player_${current_player}`)\n    }\n\n    set_current_placements_left() {\n        const placements_left = this.game.get_placements_left();\n        document.getElementById(`player_0_placements`).innerHTML = placements_left[0].toString();\n        document.getElementById(`player_1_placements`).innerHTML = placements_left[1].toString();\n    }\n\n    set_current_score() {\n        const score = this.game.calculate_score();\n        document.getElementById(`player_0_score`).innerHTML = score[0].toString();\n        document.getElementById(`player_1_score`).innerHTML = score[1].toString();\n    }\n}","import { Board } from \"./board\"\nimport { Game } from \"./game\";\nimport { UI } from \"./ui\";\n\nconst board = new Board();\nconst game = new Game(board);\nconst ui = new UI(game);\n\nui.new_game();"],"names":[],"mappings":"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"}